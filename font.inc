;Font file for ASCII chars 0-128

font:
            .byte $00,$00,$00,$00,$00,$00,$00,$00	; CTRL chars 0-31
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00

            .byte $00,$00,$00,$00,$00,$00,$00,$00	; ASCII 32-127
            .byte $18,$18,$18,$18,$18,$00,$18,$00
            .byte $6C,$6C,$6C,$00,$00,$00,$00,$00
            .byte $36,$36,$7F,$36,$7F,$36,$36,$00
            .byte $0C,$3F,$68,$3E,$0B,$7E,$18,$00
            .byte $60,$66,$0C,$18,$30,$66,$06,$00
            .byte $38,$6C,$6C,$38,$6D,$66,$3B,$00
            .byte $0C,$18,$30,$00,$00,$00,$00,$00
            .byte $0C,$18,$30,$30,$30,$18,$0C,$00
            .byte $30,$18,$0C,$0C,$0C,$18,$30,$00
            .byte $00,$18,$7E,$3C,$7E,$18,$00,$00
            .byte $00,$18,$18,$7E,$18,$18,$00,$00
            .byte $00,$00,$00,$00,$00,$18,$18,$30
            .byte $00,$00,$00,$7E,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$18,$18,$00
            .byte $00,$06,$0C,$18,$30,$60,$00,$00
            .byte $3C,$66,$6E,$7E,$76,$66,$3C,$00
            .byte $18,$38,$18,$18,$18,$18,$7E,$00
            .byte $3C,$66,$06,$0C,$18,$30,$7E,$00
            .byte $3C,$66,$06,$1C,$06,$66,$3C,$00
            .byte $0C,$1C,$3C,$6C,$7E,$0C,$0C,$00
            .byte $7E,$60,$7C,$06,$06,$66,$3C,$00
            .byte $1C,$30,$60,$7C,$66,$66,$3C,$00
            .byte $7E,$06,$0C,$18,$30,$30,$30,$00
            .byte $3C,$66,$66,$3C,$66,$66,$3C,$00
            .byte $3C,$66,$66,$3E,$06,$0C,$38,$00
            .byte $00,$00,$18,$18,$00,$18,$18,$00
            .byte $00,$00,$18,$18,$00,$18,$18,$30
            .byte $0C,$18,$30,$60,$30,$18,$0C,$00
            .byte $00,$00,$7E,$00,$7E,$00,$00,$00
            .byte $30,$18,$0C,$06,$0C,$18,$30,$00
            .byte $3C,$66,$0C,$18,$18,$00,$18,$00
            .byte $3C,$66,$6E,$6A,$6E,$60,$3C,$00
            .byte $3C,$66,$66,$7E,$66,$66,$66,$00
            .byte $7C,$66,$66,$7C,$66,$66,$7C,$00
            .byte $3C,$66,$60,$60,$60,$66,$3C,$00
            .byte $78,$6C,$66,$66,$66,$6C,$78,$00
            .byte $7E,$60,$60,$7C,$60,$60,$7E,$00
            .byte $7E,$60,$60,$7C,$60,$60,$60,$00
            .byte $3C,$66,$60,$6E,$66,$66,$3C,$00
            .byte $66,$66,$66,$7E,$66,$66,$66,$00
            .byte $7E,$18,$18,$18,$18,$18,$7E,$00
            .byte $3E,$0C,$0C,$0C,$0C,$6C,$38,$00
            .byte $66,$6C,$78,$70,$78,$6C,$66,$00
            .byte $60,$60,$60,$60,$60,$60,$7E,$00
            .byte $63,$77,$7F,$6B,$6B,$63,$63,$00
            .byte $66,$66,$76,$7E,$6E,$66,$66,$00
            .byte $3C,$66,$66,$66,$66,$66,$3C,$00
            .byte $7C,$66,$66,$7C,$60,$60,$60,$00
            .byte $3C,$66,$66,$66,$6A,$6C,$36,$00
            .byte $7C,$66,$66,$7C,$6C,$66,$66,$00
            .byte $3C,$66,$60,$3C,$06,$66,$3C,$00
            .byte $7E,$18,$18,$18,$18,$18,$18,$00
            .byte $66,$66,$66,$66,$66,$66,$3C,$00
            .byte $66,$66,$66,$66,$66,$3C,$18,$00
            .byte $63,$63,$6B,$6B,$7F,$77,$63,$00
            .byte $66,$66,$3C,$18,$3C,$66,$66,$00
            .byte $66,$66,$66,$3C,$18,$18,$18,$00
            .byte $7E,$06,$0C,$18,$30,$60,$7E,$00
            .byte $7C,$60,$60,$60,$60,$60,$7C,$00
            .byte $00,$60,$30,$18,$0C,$06,$00,$00
            .byte $3E,$06,$06,$06,$06,$06,$3E,$00
            .byte $18,$3C,$66,$42,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$FF
            .byte $1C,$36,$30,$7C,$30,$30,$7E,$00
            .byte $00,$00,$3C,$06,$3E,$66,$3E,$00
            .byte $60,$60,$7C,$66,$66,$66,$7C,$00
            .byte $00,$00,$3C,$66,$60,$66,$3C,$00
            .byte $06,$06,$3E,$66,$66,$66,$3E,$00
            .byte $00,$00,$3C,$66,$7E,$60,$3C,$00
            .byte $1C,$30,$30,$7C,$30,$30,$30,$00
            .byte $00,$00,$3E,$66,$66,$3E,$06,$3C
            .byte $60,$60,$7C,$66,$66,$66,$66,$00
            .byte $18,$00,$38,$18,$18,$18,$3C,$00
            .byte $18,$00,$38,$18,$18,$18,$18,$70
            .byte $60,$60,$66,$6C,$78,$6C,$66,$00
            .byte $38,$18,$18,$18,$18,$18,$3C,$00
            .byte $00,$00,$36,$7F,$6B,$6B,$63,$00
            .byte $00,$00,$7C,$66,$66,$66,$66,$00
            .byte $00,$00,$3C,$66,$66,$66,$3C,$00
            .byte $00,$00,$7C,$66,$66,$7C,$60,$60
            .byte $00,$00,$3E,$66,$66,$3E,$06,$07
            .byte $00,$00,$6C,$76,$60,$60,$60,$00
            .byte $00,$00,$3E,$60,$3C,$06,$7C,$00
            .byte $30,$30,$7C,$30,$30,$30,$1C,$00
            .byte $00,$00,$66,$66,$66,$66,$3E,$00
            .byte $00,$00,$66,$66,$66,$3C,$18,$00
            .byte $00,$00,$63,$6B,$6B,$7F,$36,$00
            .byte $00,$00,$66,$3C,$18,$3C,$66,$00
            .byte $00,$00,$66,$66,$66,$3E,$06,$3C
            .byte $00,$00,$7E,$0C,$18,$30,$7E,$00
            .byte $0C,$18,$18,$70,$18,$18,$0C,$00
            .byte $18,$18,$18,$00,$18,$18,$18,$00
            .byte $30,$18,$18,$0E,$18,$18,$30,$00
            .byte $31,$6B,$46,$00,$00,$00,$00,$00
            .byte $20,$c4,$0c,$4c,$2c,$0d,$00,$1f

;======================================================================
;FONT ROUTINES:
;======================================================================
; PUTSTRING
;  - x,y,string,0
;  - x,y,string,0
;  - $ff
;
; PUTCHAR x,y,a
;
; PRINTCHAR A
;======================================================================
XPOS     = $318
YPOS     = $319

PUTSTRING:
    stx $e8
    sty $e9


    ldy #0
P_S_0:
    lda ($e8),y    ; Check end of printing
    cmp #$ff
    beq P_S_4

P_S_1:
    sta XPOS       ; Save x,y,attribute
    jsr PTR_INC
    lda ($e8),y
    sta YPOS

P_S_2:
    jsr PTR_INC    ; Print character until 0
    lda ($e8),y
    beq P_S_5
    jsr PRINTCHAR
    inc XPOS
    jmp P_S_2
P_S_5:
    jsr PTR_INC
    jmp P_S_0

P_S_4:
    rts            ; Return to program

PTR_INC:           ; Increment textpointer
    inc $e8
    bne PTR_1
    inc $e9
PTR_1:
    rts

;----------------------------------------------------------------------

curs_back:
	dec XPOS
	jmp P_C_exit
curs_forw:
	inc XPOS
	jmp P_C_exit
curs_down:
	inc YPOS
	jmp P_C_exit

;----------------------------------------------------------------------
SCR      = $e0
CHR      = $e2
TMP_Y    = $e4
TMP_X    = $e5
TMP_A	 = $e6

PUTCHAR:
    stx XPOS
    sty YPOS

PRINTCHAR:
    sta TMP_A
    stx TMP_X
    sty TMP_Y

	cmp #08
	beq curs_back

	cmp #09
	beq curs_forw

	cmp #$0A
	beq curs_down

	cmp #$01
	beq P_C_exit

    sta CHR        ; Calculate characterspritedata address
    lda #0         ; = A * 8 + charsprite data address
    sta CHR+1
    asl CHR
    rol CHR+1
    asl CHR
    rol CHR+1
    asl CHR
    rol CHR+1
    lda CHR
    clc
    adc #<font
    sta CHR
    lda CHR+1
    adc #>font
    sta CHR+1
    
    lda XPOS       ; Calculate screenaddress
    sta SCR
    lda YPOS
    clc
    adc #>$8000
    sta SCR+1
 
    ldx #0
    ldy #0         ; Put character on screen
P_C_1:
    lda (CHR),y
    sta (SCR),y
    inc CHR
    bne P_C_2
    inc CHR+1
P_C_2:
    lda SCR
    clc
    adc #$20
    sta SCR
    lda SCR+1
    adc #0
    sta SCR+1
    inx
    cpx #8
    bne P_C_1

    inc XPOS
	lda XPOS
	cmp #32
	bne P_C_exit
	lda #0
	sta XPOS
	inc YPOS
P_C_exit:
    ldx TMP_X
    ldy TMP_Y
    lda TMP_A
    rts
 